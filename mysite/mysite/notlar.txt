Notları buraya alırız.

Ayrı branchler üzepiprinde de çalışırız.

migrate işlemleri
python manage.py makemigrations
python manage.py migrate 

runserver
python manage.py runserver

test
python manage.py test

firefoxdriver
https://selenium-python.readthedocs.io/installation.html
testi çalıştırmak için selenium driveri indirip path'e eklemek gerekiyor. yeniden başlatınca çalıştı. 


fixtures veritabanına varsayılan veriler eklemek için kullanılıyor. 
python manage.py loaddata option-data komutunu bir defa çağırınca ekleme yapıyor. 
Bunu yaptıktan sonra site başlığı ve footerdaki yazı yönetim panelinden düzenlenebilir. 
Siteyi kullananın bu bölümleri değiştirebilmesi amaçlanmıştır. 

python manage.py loaddata post-data komutu postları ekliyor. 
hazır postlar için. 

https://learndjango.com/tutorials/django-slug-tutorial
slugfield için buradan yardım alındı. 
title yazılırken otomatik olarak şu an oluşturuyor. 
name fieldi tartışıp kaldırabiliriz gereksiz gibi geldi şu anlık ama...

vpste django siteyi yayınlamak için:
vps kiralanır, putty ile bağlanılır. 
nginx kurulur. 
/etc/nginx/sites-available/default dosyasına şu şekilde ekleme yapılır
örnekte 8090 portundan çalıştırılacağı düşünüldü. 
server {
    listen 80;
    server_name ohacms.site;
    location / {
        proxy_pass http://127.0.0.1:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect http://127.0.0.1:8090 http://ohacms.site;
    }
    location /root/ohacms/ohacms/static {
        root /root/ohacms;
    }
}
nginx restart için:
sudo service nginx restart

daha sonra django 8090 portundan çalıştırılır. Sürekli çalışması amaçlı:
nohup python manage.py runserver 0:8090 > Output.